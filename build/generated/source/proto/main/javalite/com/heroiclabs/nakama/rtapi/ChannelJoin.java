// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: github.com/heroiclabs/nakama-common/api/realtime.proto

package com.heroiclabs.nakama.rtapi;

/**
 * <pre>
 * Join operation for a realtime chat channel.
 * </pre>
 *
 * Protobuf type {@code nakama.realtime.ChannelJoin}
 */
public  final class ChannelJoin extends
    com.google.protobuf.GeneratedMessageLite<
        ChannelJoin, ChannelJoin.Builder> implements
    // @@protoc_insertion_point(message_implements:nakama.realtime.ChannelJoin)
    ChannelJoinOrBuilder {
  private ChannelJoin() {
    target_ = "";
  }
  /**
   * <pre>
   * The type of chat channel.
   * </pre>
   *
   * Protobuf enum {@code nakama.realtime.ChannelJoin.Type}
   */
  public enum Type
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     * Default case. Assumed as ROOM type.
     * </pre>
     *
     * <code>TYPE_UNSPECIFIED = 0;</code>
     */
    TYPE_UNSPECIFIED(0),
    /**
     * <pre>
     * A room which anyone can join to chat.
     * </pre>
     *
     * <code>ROOM = 1;</code>
     */
    ROOM(1),
    /**
     * <pre>
     * A private channel for 1-on-1 chat.
     * </pre>
     *
     * <code>DIRECT_MESSAGE = 2;</code>
     */
    DIRECT_MESSAGE(2),
    /**
     * <pre>
     * A channel for group chat.
     * </pre>
     *
     * <code>GROUP = 3;</code>
     */
    GROUP(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Default case. Assumed as ROOM type.
     * </pre>
     *
     * <code>TYPE_UNSPECIFIED = 0;</code>
     */
    public static final int TYPE_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * A room which anyone can join to chat.
     * </pre>
     *
     * <code>ROOM = 1;</code>
     */
    public static final int ROOM_VALUE = 1;
    /**
     * <pre>
     * A private channel for 1-on-1 chat.
     * </pre>
     *
     * <code>DIRECT_MESSAGE = 2;</code>
     */
    public static final int DIRECT_MESSAGE_VALUE = 2;
    /**
     * <pre>
     * A channel for group chat.
     * </pre>
     *
     * <code>GROUP = 3;</code>
     */
    public static final int GROUP_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Type valueOf(int value) {
      return forNumber(value);
    }

    public static Type forNumber(int value) {
      switch (value) {
        case 0: return TYPE_UNSPECIFIED;
        case 1: return ROOM;
        case 2: return DIRECT_MESSAGE;
        case 3: return GROUP;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Type>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Type> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Type>() {
            public Type findValueByNumber(int number) {
              return Type.forNumber(number);
            }
          };

    private final int value;

    private Type(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:nakama.realtime.ChannelJoin.Type)
  }

  public static final int TARGET_FIELD_NUMBER = 1;
  private java.lang.String target_;
  /**
   * <pre>
   * The user ID to DM with, group ID to chat with, or room channel name to join.
   * </pre>
   *
   * <code>optional string target = 1;</code>
   */
  public java.lang.String getTarget() {
    return target_;
  }
  /**
   * <pre>
   * The user ID to DM with, group ID to chat with, or room channel name to join.
   * </pre>
   *
   * <code>optional string target = 1;</code>
   */
  public com.google.protobuf.ByteString
      getTargetBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(target_);
  }
  /**
   * <pre>
   * The user ID to DM with, group ID to chat with, or room channel name to join.
   * </pre>
   *
   * <code>optional string target = 1;</code>
   */
  private void setTarget(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  
    target_ = value;
  }
  /**
   * <pre>
   * The user ID to DM with, group ID to chat with, or room channel name to join.
   * </pre>
   *
   * <code>optional string target = 1;</code>
   */
  private void clearTarget() {
    
    target_ = getDefaultInstance().getTarget();
  }
  /**
   * <pre>
   * The user ID to DM with, group ID to chat with, or room channel name to join.
   * </pre>
   *
   * <code>optional string target = 1;</code>
   */
  private void setTargetBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    
    target_ = value.toStringUtf8();
  }

  public static final int TYPE_FIELD_NUMBER = 2;
  private int type_;
  /**
   * <pre>
   * The type of the chat channel.
   * </pre>
   *
   * <code>optional int32 type = 2;</code>
   */
  public int getType() {
    return type_;
  }
  /**
   * <pre>
   * The type of the chat channel.
   * </pre>
   *
   * <code>optional int32 type = 2;</code>
   */
  private void setType(int value) {
    
    type_ = value;
  }
  /**
   * <pre>
   * The type of the chat channel.
   * </pre>
   *
   * <code>optional int32 type = 2;</code>
   */
  private void clearType() {
    
    type_ = 0;
  }

  public static final int PERSISTENCE_FIELD_NUMBER = 3;
  private com.google.protobuf.BoolValue persistence_;
  /**
   * <pre>
   * Whether messages sent on this channel should be persistent.
   * </pre>
   *
   * <code>optional .google.protobuf.BoolValue persistence = 3;</code>
   */
  public boolean hasPersistence() {
    return persistence_ != null;
  }
  /**
   * <pre>
   * Whether messages sent on this channel should be persistent.
   * </pre>
   *
   * <code>optional .google.protobuf.BoolValue persistence = 3;</code>
   */
  public com.google.protobuf.BoolValue getPersistence() {
    return persistence_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : persistence_;
  }
  /**
   * <pre>
   * Whether messages sent on this channel should be persistent.
   * </pre>
   *
   * <code>optional .google.protobuf.BoolValue persistence = 3;</code>
   */
  private void setPersistence(com.google.protobuf.BoolValue value) {
    if (value == null) {
      throw new NullPointerException();
    }
    persistence_ = value;
    
    }
  /**
   * <pre>
   * Whether messages sent on this channel should be persistent.
   * </pre>
   *
   * <code>optional .google.protobuf.BoolValue persistence = 3;</code>
   */
  private void setPersistence(
      com.google.protobuf.BoolValue.Builder builderForValue) {
    persistence_ = builderForValue.build();
    
  }
  /**
   * <pre>
   * Whether messages sent on this channel should be persistent.
   * </pre>
   *
   * <code>optional .google.protobuf.BoolValue persistence = 3;</code>
   */
  private void mergePersistence(com.google.protobuf.BoolValue value) {
    if (persistence_ != null &&
        persistence_ != com.google.protobuf.BoolValue.getDefaultInstance()) {
      persistence_ =
        com.google.protobuf.BoolValue.newBuilder(persistence_).mergeFrom(value).buildPartial();
    } else {
      persistence_ = value;
    }
    
  }
  /**
   * <pre>
   * Whether messages sent on this channel should be persistent.
   * </pre>
   *
   * <code>optional .google.protobuf.BoolValue persistence = 3;</code>
   */
  private void clearPersistence() {  persistence_ = null;
    
  }

  public static final int HIDDEN_FIELD_NUMBER = 4;
  private com.google.protobuf.BoolValue hidden_;
  /**
   * <pre>
   * Whether the user should appear in the channel's presence list and events.
   * </pre>
   *
   * <code>optional .google.protobuf.BoolValue hidden = 4;</code>
   */
  public boolean hasHidden() {
    return hidden_ != null;
  }
  /**
   * <pre>
   * Whether the user should appear in the channel's presence list and events.
   * </pre>
   *
   * <code>optional .google.protobuf.BoolValue hidden = 4;</code>
   */
  public com.google.protobuf.BoolValue getHidden() {
    return hidden_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : hidden_;
  }
  /**
   * <pre>
   * Whether the user should appear in the channel's presence list and events.
   * </pre>
   *
   * <code>optional .google.protobuf.BoolValue hidden = 4;</code>
   */
  private void setHidden(com.google.protobuf.BoolValue value) {
    if (value == null) {
      throw new NullPointerException();
    }
    hidden_ = value;
    
    }
  /**
   * <pre>
   * Whether the user should appear in the channel's presence list and events.
   * </pre>
   *
   * <code>optional .google.protobuf.BoolValue hidden = 4;</code>
   */
  private void setHidden(
      com.google.protobuf.BoolValue.Builder builderForValue) {
    hidden_ = builderForValue.build();
    
  }
  /**
   * <pre>
   * Whether the user should appear in the channel's presence list and events.
   * </pre>
   *
   * <code>optional .google.protobuf.BoolValue hidden = 4;</code>
   */
  private void mergeHidden(com.google.protobuf.BoolValue value) {
    if (hidden_ != null &&
        hidden_ != com.google.protobuf.BoolValue.getDefaultInstance()) {
      hidden_ =
        com.google.protobuf.BoolValue.newBuilder(hidden_).mergeFrom(value).buildPartial();
    } else {
      hidden_ = value;
    }
    
  }
  /**
   * <pre>
   * Whether the user should appear in the channel's presence list and events.
   * </pre>
   *
   * <code>optional .google.protobuf.BoolValue hidden = 4;</code>
   */
  private void clearHidden() {  hidden_ = null;
    
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!target_.isEmpty()) {
      output.writeString(1, getTarget());
    }
    if (type_ != 0) {
      output.writeInt32(2, type_);
    }
    if (persistence_ != null) {
      output.writeMessage(3, getPersistence());
    }
    if (hidden_ != null) {
      output.writeMessage(4, getHidden());
    }
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (!target_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(1, getTarget());
    }
    if (type_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, type_);
    }
    if (persistence_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getPersistence());
    }
    if (hidden_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getHidden());
    }
    memoizedSerializedSize = size;
    return size;
  }

  public static com.heroiclabs.nakama.rtapi.ChannelJoin parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.heroiclabs.nakama.rtapi.ChannelJoin parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.heroiclabs.nakama.rtapi.ChannelJoin parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.heroiclabs.nakama.rtapi.ChannelJoin parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.heroiclabs.nakama.rtapi.ChannelJoin parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.heroiclabs.nakama.rtapi.ChannelJoin parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.heroiclabs.nakama.rtapi.ChannelJoin parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.heroiclabs.nakama.rtapi.ChannelJoin parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.heroiclabs.nakama.rtapi.ChannelJoin parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.heroiclabs.nakama.rtapi.ChannelJoin parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.heroiclabs.nakama.rtapi.ChannelJoin prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * Join operation for a realtime chat channel.
   * </pre>
   *
   * Protobuf type {@code nakama.realtime.ChannelJoin}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.heroiclabs.nakama.rtapi.ChannelJoin, Builder> implements
      // @@protoc_insertion_point(builder_implements:nakama.realtime.ChannelJoin)
      com.heroiclabs.nakama.rtapi.ChannelJoinOrBuilder {
    // Construct using com.heroiclabs.nakama.rtapi.ChannelJoin.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The user ID to DM with, group ID to chat with, or room channel name to join.
     * </pre>
     *
     * <code>optional string target = 1;</code>
     */
    public java.lang.String getTarget() {
      return instance.getTarget();
    }
    /**
     * <pre>
     * The user ID to DM with, group ID to chat with, or room channel name to join.
     * </pre>
     *
     * <code>optional string target = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTargetBytes() {
      return instance.getTargetBytes();
    }
    /**
     * <pre>
     * The user ID to DM with, group ID to chat with, or room channel name to join.
     * </pre>
     *
     * <code>optional string target = 1;</code>
     */
    public Builder setTarget(
        java.lang.String value) {
      copyOnWrite();
      instance.setTarget(value);
      return this;
    }
    /**
     * <pre>
     * The user ID to DM with, group ID to chat with, or room channel name to join.
     * </pre>
     *
     * <code>optional string target = 1;</code>
     */
    public Builder clearTarget() {
      copyOnWrite();
      instance.clearTarget();
      return this;
    }
    /**
     * <pre>
     * The user ID to DM with, group ID to chat with, or room channel name to join.
     * </pre>
     *
     * <code>optional string target = 1;</code>
     */
    public Builder setTargetBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setTargetBytes(value);
      return this;
    }

    /**
     * <pre>
     * The type of the chat channel.
     * </pre>
     *
     * <code>optional int32 type = 2;</code>
     */
    public int getType() {
      return instance.getType();
    }
    /**
     * <pre>
     * The type of the chat channel.
     * </pre>
     *
     * <code>optional int32 type = 2;</code>
     */
    public Builder setType(int value) {
      copyOnWrite();
      instance.setType(value);
      return this;
    }
    /**
     * <pre>
     * The type of the chat channel.
     * </pre>
     *
     * <code>optional int32 type = 2;</code>
     */
    public Builder clearType() {
      copyOnWrite();
      instance.clearType();
      return this;
    }

    /**
     * <pre>
     * Whether messages sent on this channel should be persistent.
     * </pre>
     *
     * <code>optional .google.protobuf.BoolValue persistence = 3;</code>
     */
    public boolean hasPersistence() {
      return instance.hasPersistence();
    }
    /**
     * <pre>
     * Whether messages sent on this channel should be persistent.
     * </pre>
     *
     * <code>optional .google.protobuf.BoolValue persistence = 3;</code>
     */
    public com.google.protobuf.BoolValue getPersistence() {
      return instance.getPersistence();
    }
    /**
     * <pre>
     * Whether messages sent on this channel should be persistent.
     * </pre>
     *
     * <code>optional .google.protobuf.BoolValue persistence = 3;</code>
     */
    public Builder setPersistence(com.google.protobuf.BoolValue value) {
      copyOnWrite();
      instance.setPersistence(value);
      return this;
      }
    /**
     * <pre>
     * Whether messages sent on this channel should be persistent.
     * </pre>
     *
     * <code>optional .google.protobuf.BoolValue persistence = 3;</code>
     */
    public Builder setPersistence(
        com.google.protobuf.BoolValue.Builder builderForValue) {
      copyOnWrite();
      instance.setPersistence(builderForValue);
      return this;
    }
    /**
     * <pre>
     * Whether messages sent on this channel should be persistent.
     * </pre>
     *
     * <code>optional .google.protobuf.BoolValue persistence = 3;</code>
     */
    public Builder mergePersistence(com.google.protobuf.BoolValue value) {
      copyOnWrite();
      instance.mergePersistence(value);
      return this;
    }
    /**
     * <pre>
     * Whether messages sent on this channel should be persistent.
     * </pre>
     *
     * <code>optional .google.protobuf.BoolValue persistence = 3;</code>
     */
    public Builder clearPersistence() {  copyOnWrite();
      instance.clearPersistence();
      return this;
    }

    /**
     * <pre>
     * Whether the user should appear in the channel's presence list and events.
     * </pre>
     *
     * <code>optional .google.protobuf.BoolValue hidden = 4;</code>
     */
    public boolean hasHidden() {
      return instance.hasHidden();
    }
    /**
     * <pre>
     * Whether the user should appear in the channel's presence list and events.
     * </pre>
     *
     * <code>optional .google.protobuf.BoolValue hidden = 4;</code>
     */
    public com.google.protobuf.BoolValue getHidden() {
      return instance.getHidden();
    }
    /**
     * <pre>
     * Whether the user should appear in the channel's presence list and events.
     * </pre>
     *
     * <code>optional .google.protobuf.BoolValue hidden = 4;</code>
     */
    public Builder setHidden(com.google.protobuf.BoolValue value) {
      copyOnWrite();
      instance.setHidden(value);
      return this;
      }
    /**
     * <pre>
     * Whether the user should appear in the channel's presence list and events.
     * </pre>
     *
     * <code>optional .google.protobuf.BoolValue hidden = 4;</code>
     */
    public Builder setHidden(
        com.google.protobuf.BoolValue.Builder builderForValue) {
      copyOnWrite();
      instance.setHidden(builderForValue);
      return this;
    }
    /**
     * <pre>
     * Whether the user should appear in the channel's presence list and events.
     * </pre>
     *
     * <code>optional .google.protobuf.BoolValue hidden = 4;</code>
     */
    public Builder mergeHidden(com.google.protobuf.BoolValue value) {
      copyOnWrite();
      instance.mergeHidden(value);
      return this;
    }
    /**
     * <pre>
     * Whether the user should appear in the channel's presence list and events.
     * </pre>
     *
     * <code>optional .google.protobuf.BoolValue hidden = 4;</code>
     */
    public Builder clearHidden() {  copyOnWrite();
      instance.clearHidden();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:nakama.realtime.ChannelJoin)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.heroiclabs.nakama.rtapi.ChannelJoin();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        com.heroiclabs.nakama.rtapi.ChannelJoin other = (com.heroiclabs.nakama.rtapi.ChannelJoin) arg1;
        target_ = visitor.visitString(!target_.isEmpty(), target_,
            !other.target_.isEmpty(), other.target_);
        type_ = visitor.visitInt(type_ != 0, type_,
            other.type_ != 0, other.type_);
        persistence_ = visitor.visitMessage(persistence_, other.persistence_);
        hidden_ = visitor.visitMessage(hidden_, other.hidden_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                String s = input.readStringRequireUtf8();

                target_ = s;
                break;
              }
              case 16: {

                type_ = input.readInt32();
                break;
              }
              case 26: {
                com.google.protobuf.BoolValue.Builder subBuilder = null;
                if (persistence_ != null) {
                  subBuilder = persistence_.toBuilder();
                }
                persistence_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(persistence_);
                  persistence_ = subBuilder.buildPartial();
                }

                break;
              }
              case 34: {
                com.google.protobuf.BoolValue.Builder subBuilder = null;
                if (hidden_ != null) {
                  subBuilder = hidden_.toBuilder();
                }
                hidden_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(hidden_);
                  hidden_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (com.heroiclabs.nakama.rtapi.ChannelJoin.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:nakama.realtime.ChannelJoin)
  private static final com.heroiclabs.nakama.rtapi.ChannelJoin DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ChannelJoin();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static com.heroiclabs.nakama.rtapi.ChannelJoin getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<ChannelJoin> PARSER;

  public static com.google.protobuf.Parser<ChannelJoin> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

