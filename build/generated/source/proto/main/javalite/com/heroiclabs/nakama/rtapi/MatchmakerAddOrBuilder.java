// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: github.com/heroiclabs/nakama-common/api/realtime.proto

package com.heroiclabs.nakama.rtapi;

public interface MatchmakerAddOrBuilder extends
    // @@protoc_insertion_point(interface_extends:nakama.realtime.MatchmakerAdd)
    com.google.protobuf.MessageLiteOrBuilder {

  /**
   * <pre>
   * Minimum total user count to match together.
   * </pre>
   *
   * <code>optional int32 min_count = 1;</code>
   */
  int getMinCount();

  /**
   * <pre>
   * Maximum total user count to match together.
   * </pre>
   *
   * <code>optional int32 max_count = 2;</code>
   */
  int getMaxCount();

  /**
   * <pre>
   * Filter query used to identify suitable users.
   * </pre>
   *
   * <code>optional string query = 3;</code>
   */
  java.lang.String getQuery();
  /**
   * <pre>
   * Filter query used to identify suitable users.
   * </pre>
   *
   * <code>optional string query = 3;</code>
   */
  com.google.protobuf.ByteString
      getQueryBytes();

  /**
   * <pre>
   * String properties.
   * </pre>
   *
   * <code>map&lt;string, string&gt; string_properties = 4;</code>
   */
  int getStringPropertiesCount();
  /**
   * <pre>
   * String properties.
   * </pre>
   *
   * <code>map&lt;string, string&gt; string_properties = 4;</code>
   */
  boolean containsStringProperties(
      java.lang.String key);
  /**
   * Use {@link #getStringPropertiesMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getStringProperties();
  /**
   * <pre>
   * String properties.
   * </pre>
   *
   * <code>map&lt;string, string&gt; string_properties = 4;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getStringPropertiesMap();
  /**
   * <pre>
   * String properties.
   * </pre>
   *
   * <code>map&lt;string, string&gt; string_properties = 4;</code>
   */

  java.lang.String getStringPropertiesOrDefault(
      java.lang.String key,
      java.lang.String defaultValue);
  /**
   * <pre>
   * String properties.
   * </pre>
   *
   * <code>map&lt;string, string&gt; string_properties = 4;</code>
   */

  java.lang.String getStringPropertiesOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * Numeric properties.
   * </pre>
   *
   * <code>map&lt;string, double&gt; numeric_properties = 5;</code>
   */
  int getNumericPropertiesCount();
  /**
   * <pre>
   * Numeric properties.
   * </pre>
   *
   * <code>map&lt;string, double&gt; numeric_properties = 5;</code>
   */
  boolean containsNumericProperties(
      java.lang.String key);
  /**
   * Use {@link #getNumericPropertiesMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.Double>
  getNumericProperties();
  /**
   * <pre>
   * Numeric properties.
   * </pre>
   *
   * <code>map&lt;string, double&gt; numeric_properties = 5;</code>
   */
  java.util.Map<java.lang.String, java.lang.Double>
  getNumericPropertiesMap();
  /**
   * <pre>
   * Numeric properties.
   * </pre>
   *
   * <code>map&lt;string, double&gt; numeric_properties = 5;</code>
   */

  double getNumericPropertiesOrDefault(
      java.lang.String key,
      double defaultValue);
  /**
   * <pre>
   * Numeric properties.
   * </pre>
   *
   * <code>map&lt;string, double&gt; numeric_properties = 5;</code>
   */

  double getNumericPropertiesOrThrow(
      java.lang.String key);
}
