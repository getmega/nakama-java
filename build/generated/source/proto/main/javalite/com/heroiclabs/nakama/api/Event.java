// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api.proto

package com.heroiclabs.nakama.api;

/**
 * <pre>
 * Represents an event to be passed through the server to registered event handlers.
 * </pre>
 *
 * Protobuf type {@code nakama.api.Event}
 */
public  final class Event extends
    com.google.protobuf.GeneratedMessageLite<
        Event, Event.Builder> implements
    // @@protoc_insertion_point(message_implements:nakama.api.Event)
    EventOrBuilder {
  private Event() {
    name_ = "";
  }
  private int bitField0_;
  public static final int NAME_FIELD_NUMBER = 1;
  private java.lang.String name_;
  /**
   * <pre>
   * An event name, type, category, or identifier.
   * </pre>
   *
   * <code>optional string name = 1;</code>
   */
  public java.lang.String getName() {
    return name_;
  }
  /**
   * <pre>
   * An event name, type, category, or identifier.
   * </pre>
   *
   * <code>optional string name = 1;</code>
   */
  public com.google.protobuf.ByteString
      getNameBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(name_);
  }
  /**
   * <pre>
   * An event name, type, category, or identifier.
   * </pre>
   *
   * <code>optional string name = 1;</code>
   */
  private void setName(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  
    name_ = value;
  }
  /**
   * <pre>
   * An event name, type, category, or identifier.
   * </pre>
   *
   * <code>optional string name = 1;</code>
   */
  private void clearName() {
    
    name_ = getDefaultInstance().getName();
  }
  /**
   * <pre>
   * An event name, type, category, or identifier.
   * </pre>
   *
   * <code>optional string name = 1;</code>
   */
  private void setNameBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    
    name_ = value.toStringUtf8();
  }

  public static final int PROPERTIES_FIELD_NUMBER = 2;
  private static final class PropertiesDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<java.lang.String, java.lang.String>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapFieldLite<
      java.lang.String, java.lang.String> properties_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.String>
  internalGetProperties() {
    return properties_;
  }
  private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.String>
  internalGetMutableProperties() {
    if (!properties_.isMutable()) {
      properties_ = properties_.mutableCopy();
    }
    return properties_;
  }

  public int getPropertiesCount() {
    return internalGetProperties().size();
  }
  /**
   * <pre>
   * Arbitrary event property values.
   * </pre>
   *
   * <code>map&lt;string, string&gt; properties = 2;</code>
   */

  public boolean containsProperties(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetProperties().containsKey(key);
  }
  /**
   * Use {@link #getPropertiesMap()} instead.
   */
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getProperties() {
    return getPropertiesMap();
  }
  /**
   * <pre>
   * Arbitrary event property values.
   * </pre>
   *
   * <code>map&lt;string, string&gt; properties = 2;</code>
   */

  public java.util.Map<java.lang.String, java.lang.String> getPropertiesMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetProperties());
  }
  /**
   * <pre>
   * Arbitrary event property values.
   * </pre>
   *
   * <code>map&lt;string, string&gt; properties = 2;</code>
   */

  public java.lang.String getPropertiesOrDefault(
      java.lang.String key,
      java.lang.String defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetProperties();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Arbitrary event property values.
   * </pre>
   *
   * <code>map&lt;string, string&gt; properties = 2;</code>
   */

  public java.lang.String getPropertiesOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetProperties();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <pre>
   * Arbitrary event property values.
   * </pre>
   *
   * <code>map&lt;string, string&gt; properties = 2;</code>
   */
  private java.util.Map<java.lang.String, java.lang.String>
  getMutablePropertiesMap() {
    return internalGetMutableProperties();
  }

  public static final int TIMESTAMP_FIELD_NUMBER = 3;
  private com.google.protobuf.Timestamp timestamp_;
  /**
   * <pre>
   * The time when the event was triggered.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp timestamp = 3;</code>
   */
  public boolean hasTimestamp() {
    return timestamp_ != null;
  }
  /**
   * <pre>
   * The time when the event was triggered.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp timestamp = 3;</code>
   */
  public com.google.protobuf.Timestamp getTimestamp() {
    return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
  }
  /**
   * <pre>
   * The time when the event was triggered.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp timestamp = 3;</code>
   */
  private void setTimestamp(com.google.protobuf.Timestamp value) {
    if (value == null) {
      throw new NullPointerException();
    }
    timestamp_ = value;
    
    }
  /**
   * <pre>
   * The time when the event was triggered.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp timestamp = 3;</code>
   */
  private void setTimestamp(
      com.google.protobuf.Timestamp.Builder builderForValue) {
    timestamp_ = builderForValue.build();
    
  }
  /**
   * <pre>
   * The time when the event was triggered.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp timestamp = 3;</code>
   */
  private void mergeTimestamp(com.google.protobuf.Timestamp value) {
    if (timestamp_ != null &&
        timestamp_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
      timestamp_ =
        com.google.protobuf.Timestamp.newBuilder(timestamp_).mergeFrom(value).buildPartial();
    } else {
      timestamp_ = value;
    }
    
  }
  /**
   * <pre>
   * The time when the event was triggered.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp timestamp = 3;</code>
   */
  private void clearTimestamp() {  timestamp_ = null;
    
  }

  public static final int EXTERNAL_FIELD_NUMBER = 4;
  private boolean external_;
  /**
   * <pre>
   * True if the event came directly from a client call, false otherwise.
   * </pre>
   *
   * <code>optional bool external = 4;</code>
   */
  public boolean getExternal() {
    return external_;
  }
  /**
   * <pre>
   * True if the event came directly from a client call, false otherwise.
   * </pre>
   *
   * <code>optional bool external = 4;</code>
   */
  private void setExternal(boolean value) {
    
    external_ = value;
  }
  /**
   * <pre>
   * True if the event came directly from a client call, false otherwise.
   * </pre>
   *
   * <code>optional bool external = 4;</code>
   */
  private void clearExternal() {
    
    external_ = false;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!name_.isEmpty()) {
      output.writeString(1, getName());
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetProperties().entrySet()) {
      PropertiesDefaultEntryHolder.defaultEntry.serializeTo(
          output, 2, entry.getKey(), entry.getValue());
    }
    if (timestamp_ != null) {
      output.writeMessage(3, getTimestamp());
    }
    if (external_ != false) {
      output.writeBool(4, external_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (!name_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(1, getName());
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetProperties().entrySet()) {
      size += PropertiesDefaultEntryHolder.defaultEntry.computeMessageSize(
        2, entry.getKey(), entry.getValue());
    }
    if (timestamp_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getTimestamp());
    }
    if (external_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, external_);
    }
    memoizedSerializedSize = size;
    return size;
  }

  public static com.heroiclabs.nakama.api.Event parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.heroiclabs.nakama.api.Event parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.heroiclabs.nakama.api.Event parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.heroiclabs.nakama.api.Event parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.heroiclabs.nakama.api.Event parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.heroiclabs.nakama.api.Event parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.heroiclabs.nakama.api.Event parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.heroiclabs.nakama.api.Event parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.heroiclabs.nakama.api.Event parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.heroiclabs.nakama.api.Event parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.heroiclabs.nakama.api.Event prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * Represents an event to be passed through the server to registered event handlers.
   * </pre>
   *
   * Protobuf type {@code nakama.api.Event}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.heroiclabs.nakama.api.Event, Builder> implements
      // @@protoc_insertion_point(builder_implements:nakama.api.Event)
      com.heroiclabs.nakama.api.EventOrBuilder {
    // Construct using com.heroiclabs.nakama.api.Event.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * An event name, type, category, or identifier.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    public java.lang.String getName() {
      return instance.getName();
    }
    /**
     * <pre>
     * An event name, type, category, or identifier.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      return instance.getNameBytes();
    }
    /**
     * <pre>
     * An event name, type, category, or identifier.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    public Builder setName(
        java.lang.String value) {
      copyOnWrite();
      instance.setName(value);
      return this;
    }
    /**
     * <pre>
     * An event name, type, category, or identifier.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    public Builder clearName() {
      copyOnWrite();
      instance.clearName();
      return this;
    }
    /**
     * <pre>
     * An event name, type, category, or identifier.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setNameBytes(value);
      return this;
    }


    public int getPropertiesCount() {
      return instance.getPropertiesMap().size();
    }
    /**
     * <pre>
     * Arbitrary event property values.
     * </pre>
     *
     * <code>map&lt;string, string&gt; properties = 2;</code>
     */

    public boolean containsProperties(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return instance.getPropertiesMap().containsKey(key);
    }

    public Builder clearProperties() {
      copyOnWrite();
      instance.getMutablePropertiesMap().clear();
      return this;
    }
    /**
     * <pre>
     * Arbitrary event property values.
     * </pre>
     *
     * <code>map&lt;string, string&gt; properties = 2;</code>
     */

    public Builder removeProperties(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      copyOnWrite();
      instance.getMutablePropertiesMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getPropertiesMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getProperties() {
      return getPropertiesMap();
    }
    /**
     * <pre>
     * Arbitrary event property values.
     * </pre>
     *
     * <code>map&lt;string, string&gt; properties = 2;</code>
     */
    public java.util.Map<java.lang.String, java.lang.String> getPropertiesMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getPropertiesMap());
    }
    /**
     * <pre>
     * Arbitrary event property values.
     * </pre>
     *
     * <code>map&lt;string, string&gt; properties = 2;</code>
     */

    public java.lang.String getPropertiesOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          instance.getPropertiesMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Arbitrary event property values.
     * </pre>
     *
     * <code>map&lt;string, string&gt; properties = 2;</code>
     */

    public java.lang.String getPropertiesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          instance.getPropertiesMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <pre>
     * Arbitrary event property values.
     * </pre>
     *
     * <code>map&lt;string, string&gt; properties = 2;</code>
     */
    public Builder putProperties(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      if (value == null) { throw new java.lang.NullPointerException(); }
      copyOnWrite();
      instance.getMutablePropertiesMap().put(key, value);
      return this;
    }
    /**
     * <pre>
     * Arbitrary event property values.
     * </pre>
     *
     * <code>map&lt;string, string&gt; properties = 2;</code>
     */
    public Builder putAllProperties(
        java.util.Map<java.lang.String, java.lang.String> values) {
      copyOnWrite();
      instance.getMutablePropertiesMap().putAll(values);
      return this;
    }

    /**
     * <pre>
     * The time when the event was triggered.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp timestamp = 3;</code>
     */
    public boolean hasTimestamp() {
      return instance.hasTimestamp();
    }
    /**
     * <pre>
     * The time when the event was triggered.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp timestamp = 3;</code>
     */
    public com.google.protobuf.Timestamp getTimestamp() {
      return instance.getTimestamp();
    }
    /**
     * <pre>
     * The time when the event was triggered.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp timestamp = 3;</code>
     */
    public Builder setTimestamp(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.setTimestamp(value);
      return this;
      }
    /**
     * <pre>
     * The time when the event was triggered.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp timestamp = 3;</code>
     */
    public Builder setTimestamp(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      copyOnWrite();
      instance.setTimestamp(builderForValue);
      return this;
    }
    /**
     * <pre>
     * The time when the event was triggered.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp timestamp = 3;</code>
     */
    public Builder mergeTimestamp(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.mergeTimestamp(value);
      return this;
    }
    /**
     * <pre>
     * The time when the event was triggered.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp timestamp = 3;</code>
     */
    public Builder clearTimestamp() {  copyOnWrite();
      instance.clearTimestamp();
      return this;
    }

    /**
     * <pre>
     * True if the event came directly from a client call, false otherwise.
     * </pre>
     *
     * <code>optional bool external = 4;</code>
     */
    public boolean getExternal() {
      return instance.getExternal();
    }
    /**
     * <pre>
     * True if the event came directly from a client call, false otherwise.
     * </pre>
     *
     * <code>optional bool external = 4;</code>
     */
    public Builder setExternal(boolean value) {
      copyOnWrite();
      instance.setExternal(value);
      return this;
    }
    /**
     * <pre>
     * True if the event came directly from a client call, false otherwise.
     * </pre>
     *
     * <code>optional bool external = 4;</code>
     */
    public Builder clearExternal() {
      copyOnWrite();
      instance.clearExternal();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:nakama.api.Event)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.heroiclabs.nakama.api.Event();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        properties_.makeImmutable();
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        com.heroiclabs.nakama.api.Event other = (com.heroiclabs.nakama.api.Event) arg1;
        name_ = visitor.visitString(!name_.isEmpty(), name_,
            !other.name_.isEmpty(), other.name_);
        properties_ = visitor.visitMap(
            properties_, other.internalGetProperties());
        timestamp_ = visitor.visitMessage(timestamp_, other.timestamp_);
        external_ = visitor.visitBoolean(external_ != false, external_,
            other.external_ != false, other.external_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          bitField0_ |= other.bitField0_;
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                String s = input.readStringRequireUtf8();

                name_ = s;
                break;
              }
              case 18: {
                if (!properties_.isMutable()) {
                  properties_ = properties_.mutableCopy();
                }
                PropertiesDefaultEntryHolder.defaultEntry.parseInto(properties_, input, extensionRegistry);  break;
              }
              case 26: {
                com.google.protobuf.Timestamp.Builder subBuilder = null;
                if (timestamp_ != null) {
                  subBuilder = timestamp_.toBuilder();
                }
                timestamp_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(timestamp_);
                  timestamp_ = subBuilder.buildPartial();
                }

                break;
              }
              case 32: {

                external_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (com.heroiclabs.nakama.api.Event.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:nakama.api.Event)
  private static final com.heroiclabs.nakama.api.Event DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new Event();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static com.heroiclabs.nakama.api.Event getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<Event> PARSER;

  public static com.google.protobuf.Parser<Event> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

