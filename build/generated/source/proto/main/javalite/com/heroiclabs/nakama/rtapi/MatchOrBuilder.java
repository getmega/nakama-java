// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: github.com/heroiclabs/nakama-common/api/realtime.proto

package com.heroiclabs.nakama.rtapi;

public interface MatchOrBuilder extends
    // @@protoc_insertion_point(interface_extends:nakama.realtime.Match)
    com.google.protobuf.MessageLiteOrBuilder {

  /**
   * <pre>
   * The match unique ID.
   * </pre>
   *
   * <code>optional string match_id = 1;</code>
   */
  java.lang.String getMatchId();
  /**
   * <pre>
   * The match unique ID.
   * </pre>
   *
   * <code>optional string match_id = 1;</code>
   */
  com.google.protobuf.ByteString
      getMatchIdBytes();

  /**
   * <pre>
   * True if it's an server-managed authoritative match, false otherwise.
   * </pre>
   *
   * <code>optional bool authoritative = 2;</code>
   */
  boolean getAuthoritative();

  /**
   * <pre>
   * Match label, if any.
   * </pre>
   *
   * <code>optional .google.protobuf.StringValue label = 3;</code>
   */
  boolean hasLabel();
  /**
   * <pre>
   * Match label, if any.
   * </pre>
   *
   * <code>optional .google.protobuf.StringValue label = 3;</code>
   */
  com.google.protobuf.StringValue getLabel();

  /**
   * <pre>
   * The number of users currently in the match.
   * </pre>
   *
   * <code>optional int32 size = 4;</code>
   */
  int getSize();

  /**
   * <pre>
   * The users currently in the match.
   * </pre>
   *
   * <code>repeated .nakama.realtime.UserPresence presences = 5;</code>
   */
  java.util.List<com.heroiclabs.nakama.rtapi.UserPresence> 
      getPresencesList();
  /**
   * <pre>
   * The users currently in the match.
   * </pre>
   *
   * <code>repeated .nakama.realtime.UserPresence presences = 5;</code>
   */
  com.heroiclabs.nakama.rtapi.UserPresence getPresences(int index);
  /**
   * <pre>
   * The users currently in the match.
   * </pre>
   *
   * <code>repeated .nakama.realtime.UserPresence presences = 5;</code>
   */
  int getPresencesCount();

  /**
   * <pre>
   * A reference to the current user's presence in the match.
   * </pre>
   *
   * <code>optional .nakama.realtime.UserPresence self = 6;</code>
   */
  boolean hasSelf();
  /**
   * <pre>
   * A reference to the current user's presence in the match.
   * </pre>
   *
   * <code>optional .nakama.realtime.UserPresence self = 6;</code>
   */
  com.heroiclabs.nakama.rtapi.UserPresence getSelf();
}
