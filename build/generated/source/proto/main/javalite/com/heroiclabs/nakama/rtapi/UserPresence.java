// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: github.com/heroiclabs/nakama-common/api/realtime.proto

package com.heroiclabs.nakama.rtapi;

/**
 * <pre>
 * A user session associated to a stream, usually through a list operation or a join/leave event.
 * </pre>
 *
 * Protobuf type {@code nakama.realtime.UserPresence}
 */
public  final class UserPresence extends
    com.google.protobuf.GeneratedMessageLite<
        UserPresence, UserPresence.Builder> implements
    // @@protoc_insertion_point(message_implements:nakama.realtime.UserPresence)
    UserPresenceOrBuilder {
  private UserPresence() {
    userId_ = "";
    sessionId_ = "";
    username_ = "";
  }
  public static final int USER_ID_FIELD_NUMBER = 1;
  private java.lang.String userId_;
  /**
   * <pre>
   * The user this presence belongs to.
   * </pre>
   *
   * <code>optional string user_id = 1;</code>
   */
  public java.lang.String getUserId() {
    return userId_;
  }
  /**
   * <pre>
   * The user this presence belongs to.
   * </pre>
   *
   * <code>optional string user_id = 1;</code>
   */
  public com.google.protobuf.ByteString
      getUserIdBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(userId_);
  }
  /**
   * <pre>
   * The user this presence belongs to.
   * </pre>
   *
   * <code>optional string user_id = 1;</code>
   */
  private void setUserId(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  
    userId_ = value;
  }
  /**
   * <pre>
   * The user this presence belongs to.
   * </pre>
   *
   * <code>optional string user_id = 1;</code>
   */
  private void clearUserId() {
    
    userId_ = getDefaultInstance().getUserId();
  }
  /**
   * <pre>
   * The user this presence belongs to.
   * </pre>
   *
   * <code>optional string user_id = 1;</code>
   */
  private void setUserIdBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    
    userId_ = value.toStringUtf8();
  }

  public static final int SESSION_ID_FIELD_NUMBER = 2;
  private java.lang.String sessionId_;
  /**
   * <pre>
   * A unique session ID identifying the particular connection, because the user may have many.
   * </pre>
   *
   * <code>optional string session_id = 2;</code>
   */
  public java.lang.String getSessionId() {
    return sessionId_;
  }
  /**
   * <pre>
   * A unique session ID identifying the particular connection, because the user may have many.
   * </pre>
   *
   * <code>optional string session_id = 2;</code>
   */
  public com.google.protobuf.ByteString
      getSessionIdBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(sessionId_);
  }
  /**
   * <pre>
   * A unique session ID identifying the particular connection, because the user may have many.
   * </pre>
   *
   * <code>optional string session_id = 2;</code>
   */
  private void setSessionId(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  
    sessionId_ = value;
  }
  /**
   * <pre>
   * A unique session ID identifying the particular connection, because the user may have many.
   * </pre>
   *
   * <code>optional string session_id = 2;</code>
   */
  private void clearSessionId() {
    
    sessionId_ = getDefaultInstance().getSessionId();
  }
  /**
   * <pre>
   * A unique session ID identifying the particular connection, because the user may have many.
   * </pre>
   *
   * <code>optional string session_id = 2;</code>
   */
  private void setSessionIdBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    
    sessionId_ = value.toStringUtf8();
  }

  public static final int USERNAME_FIELD_NUMBER = 3;
  private java.lang.String username_;
  /**
   * <pre>
   * The username for display purposes.
   * </pre>
   *
   * <code>optional string username = 3;</code>
   */
  public java.lang.String getUsername() {
    return username_;
  }
  /**
   * <pre>
   * The username for display purposes.
   * </pre>
   *
   * <code>optional string username = 3;</code>
   */
  public com.google.protobuf.ByteString
      getUsernameBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(username_);
  }
  /**
   * <pre>
   * The username for display purposes.
   * </pre>
   *
   * <code>optional string username = 3;</code>
   */
  private void setUsername(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  
    username_ = value;
  }
  /**
   * <pre>
   * The username for display purposes.
   * </pre>
   *
   * <code>optional string username = 3;</code>
   */
  private void clearUsername() {
    
    username_ = getDefaultInstance().getUsername();
  }
  /**
   * <pre>
   * The username for display purposes.
   * </pre>
   *
   * <code>optional string username = 3;</code>
   */
  private void setUsernameBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    
    username_ = value.toStringUtf8();
  }

  public static final int PERSISTENCE_FIELD_NUMBER = 4;
  private boolean persistence_;
  /**
   * <pre>
   * Whether this presence generates persistent data/messages, if applicable for the stream type.
   * </pre>
   *
   * <code>optional bool persistence = 4;</code>
   */
  public boolean getPersistence() {
    return persistence_;
  }
  /**
   * <pre>
   * Whether this presence generates persistent data/messages, if applicable for the stream type.
   * </pre>
   *
   * <code>optional bool persistence = 4;</code>
   */
  private void setPersistence(boolean value) {
    
    persistence_ = value;
  }
  /**
   * <pre>
   * Whether this presence generates persistent data/messages, if applicable for the stream type.
   * </pre>
   *
   * <code>optional bool persistence = 4;</code>
   */
  private void clearPersistence() {
    
    persistence_ = false;
  }

  public static final int STATUS_FIELD_NUMBER = 5;
  private com.google.protobuf.StringValue status_;
  /**
   * <pre>
   * A user-set status message for this stream, if applicable.
   * </pre>
   *
   * <code>optional .google.protobuf.StringValue status = 5;</code>
   */
  public boolean hasStatus() {
    return status_ != null;
  }
  /**
   * <pre>
   * A user-set status message for this stream, if applicable.
   * </pre>
   *
   * <code>optional .google.protobuf.StringValue status = 5;</code>
   */
  public com.google.protobuf.StringValue getStatus() {
    return status_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : status_;
  }
  /**
   * <pre>
   * A user-set status message for this stream, if applicable.
   * </pre>
   *
   * <code>optional .google.protobuf.StringValue status = 5;</code>
   */
  private void setStatus(com.google.protobuf.StringValue value) {
    if (value == null) {
      throw new NullPointerException();
    }
    status_ = value;
    
    }
  /**
   * <pre>
   * A user-set status message for this stream, if applicable.
   * </pre>
   *
   * <code>optional .google.protobuf.StringValue status = 5;</code>
   */
  private void setStatus(
      com.google.protobuf.StringValue.Builder builderForValue) {
    status_ = builderForValue.build();
    
  }
  /**
   * <pre>
   * A user-set status message for this stream, if applicable.
   * </pre>
   *
   * <code>optional .google.protobuf.StringValue status = 5;</code>
   */
  private void mergeStatus(com.google.protobuf.StringValue value) {
    if (status_ != null &&
        status_ != com.google.protobuf.StringValue.getDefaultInstance()) {
      status_ =
        com.google.protobuf.StringValue.newBuilder(status_).mergeFrom(value).buildPartial();
    } else {
      status_ = value;
    }
    
  }
  /**
   * <pre>
   * A user-set status message for this stream, if applicable.
   * </pre>
   *
   * <code>optional .google.protobuf.StringValue status = 5;</code>
   */
  private void clearStatus() {  status_ = null;
    
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!userId_.isEmpty()) {
      output.writeString(1, getUserId());
    }
    if (!sessionId_.isEmpty()) {
      output.writeString(2, getSessionId());
    }
    if (!username_.isEmpty()) {
      output.writeString(3, getUsername());
    }
    if (persistence_ != false) {
      output.writeBool(4, persistence_);
    }
    if (status_ != null) {
      output.writeMessage(5, getStatus());
    }
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (!userId_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(1, getUserId());
    }
    if (!sessionId_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(2, getSessionId());
    }
    if (!username_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(3, getUsername());
    }
    if (persistence_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, persistence_);
    }
    if (status_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getStatus());
    }
    memoizedSerializedSize = size;
    return size;
  }

  public static com.heroiclabs.nakama.rtapi.UserPresence parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.heroiclabs.nakama.rtapi.UserPresence parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.heroiclabs.nakama.rtapi.UserPresence parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.heroiclabs.nakama.rtapi.UserPresence parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.heroiclabs.nakama.rtapi.UserPresence parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.heroiclabs.nakama.rtapi.UserPresence parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.heroiclabs.nakama.rtapi.UserPresence parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.heroiclabs.nakama.rtapi.UserPresence parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.heroiclabs.nakama.rtapi.UserPresence parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.heroiclabs.nakama.rtapi.UserPresence parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.heroiclabs.nakama.rtapi.UserPresence prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * A user session associated to a stream, usually through a list operation or a join/leave event.
   * </pre>
   *
   * Protobuf type {@code nakama.realtime.UserPresence}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.heroiclabs.nakama.rtapi.UserPresence, Builder> implements
      // @@protoc_insertion_point(builder_implements:nakama.realtime.UserPresence)
      com.heroiclabs.nakama.rtapi.UserPresenceOrBuilder {
    // Construct using com.heroiclabs.nakama.rtapi.UserPresence.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The user this presence belongs to.
     * </pre>
     *
     * <code>optional string user_id = 1;</code>
     */
    public java.lang.String getUserId() {
      return instance.getUserId();
    }
    /**
     * <pre>
     * The user this presence belongs to.
     * </pre>
     *
     * <code>optional string user_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getUserIdBytes() {
      return instance.getUserIdBytes();
    }
    /**
     * <pre>
     * The user this presence belongs to.
     * </pre>
     *
     * <code>optional string user_id = 1;</code>
     */
    public Builder setUserId(
        java.lang.String value) {
      copyOnWrite();
      instance.setUserId(value);
      return this;
    }
    /**
     * <pre>
     * The user this presence belongs to.
     * </pre>
     *
     * <code>optional string user_id = 1;</code>
     */
    public Builder clearUserId() {
      copyOnWrite();
      instance.clearUserId();
      return this;
    }
    /**
     * <pre>
     * The user this presence belongs to.
     * </pre>
     *
     * <code>optional string user_id = 1;</code>
     */
    public Builder setUserIdBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setUserIdBytes(value);
      return this;
    }

    /**
     * <pre>
     * A unique session ID identifying the particular connection, because the user may have many.
     * </pre>
     *
     * <code>optional string session_id = 2;</code>
     */
    public java.lang.String getSessionId() {
      return instance.getSessionId();
    }
    /**
     * <pre>
     * A unique session ID identifying the particular connection, because the user may have many.
     * </pre>
     *
     * <code>optional string session_id = 2;</code>
     */
    public com.google.protobuf.ByteString
        getSessionIdBytes() {
      return instance.getSessionIdBytes();
    }
    /**
     * <pre>
     * A unique session ID identifying the particular connection, because the user may have many.
     * </pre>
     *
     * <code>optional string session_id = 2;</code>
     */
    public Builder setSessionId(
        java.lang.String value) {
      copyOnWrite();
      instance.setSessionId(value);
      return this;
    }
    /**
     * <pre>
     * A unique session ID identifying the particular connection, because the user may have many.
     * </pre>
     *
     * <code>optional string session_id = 2;</code>
     */
    public Builder clearSessionId() {
      copyOnWrite();
      instance.clearSessionId();
      return this;
    }
    /**
     * <pre>
     * A unique session ID identifying the particular connection, because the user may have many.
     * </pre>
     *
     * <code>optional string session_id = 2;</code>
     */
    public Builder setSessionIdBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setSessionIdBytes(value);
      return this;
    }

    /**
     * <pre>
     * The username for display purposes.
     * </pre>
     *
     * <code>optional string username = 3;</code>
     */
    public java.lang.String getUsername() {
      return instance.getUsername();
    }
    /**
     * <pre>
     * The username for display purposes.
     * </pre>
     *
     * <code>optional string username = 3;</code>
     */
    public com.google.protobuf.ByteString
        getUsernameBytes() {
      return instance.getUsernameBytes();
    }
    /**
     * <pre>
     * The username for display purposes.
     * </pre>
     *
     * <code>optional string username = 3;</code>
     */
    public Builder setUsername(
        java.lang.String value) {
      copyOnWrite();
      instance.setUsername(value);
      return this;
    }
    /**
     * <pre>
     * The username for display purposes.
     * </pre>
     *
     * <code>optional string username = 3;</code>
     */
    public Builder clearUsername() {
      copyOnWrite();
      instance.clearUsername();
      return this;
    }
    /**
     * <pre>
     * The username for display purposes.
     * </pre>
     *
     * <code>optional string username = 3;</code>
     */
    public Builder setUsernameBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setUsernameBytes(value);
      return this;
    }

    /**
     * <pre>
     * Whether this presence generates persistent data/messages, if applicable for the stream type.
     * </pre>
     *
     * <code>optional bool persistence = 4;</code>
     */
    public boolean getPersistence() {
      return instance.getPersistence();
    }
    /**
     * <pre>
     * Whether this presence generates persistent data/messages, if applicable for the stream type.
     * </pre>
     *
     * <code>optional bool persistence = 4;</code>
     */
    public Builder setPersistence(boolean value) {
      copyOnWrite();
      instance.setPersistence(value);
      return this;
    }
    /**
     * <pre>
     * Whether this presence generates persistent data/messages, if applicable for the stream type.
     * </pre>
     *
     * <code>optional bool persistence = 4;</code>
     */
    public Builder clearPersistence() {
      copyOnWrite();
      instance.clearPersistence();
      return this;
    }

    /**
     * <pre>
     * A user-set status message for this stream, if applicable.
     * </pre>
     *
     * <code>optional .google.protobuf.StringValue status = 5;</code>
     */
    public boolean hasStatus() {
      return instance.hasStatus();
    }
    /**
     * <pre>
     * A user-set status message for this stream, if applicable.
     * </pre>
     *
     * <code>optional .google.protobuf.StringValue status = 5;</code>
     */
    public com.google.protobuf.StringValue getStatus() {
      return instance.getStatus();
    }
    /**
     * <pre>
     * A user-set status message for this stream, if applicable.
     * </pre>
     *
     * <code>optional .google.protobuf.StringValue status = 5;</code>
     */
    public Builder setStatus(com.google.protobuf.StringValue value) {
      copyOnWrite();
      instance.setStatus(value);
      return this;
      }
    /**
     * <pre>
     * A user-set status message for this stream, if applicable.
     * </pre>
     *
     * <code>optional .google.protobuf.StringValue status = 5;</code>
     */
    public Builder setStatus(
        com.google.protobuf.StringValue.Builder builderForValue) {
      copyOnWrite();
      instance.setStatus(builderForValue);
      return this;
    }
    /**
     * <pre>
     * A user-set status message for this stream, if applicable.
     * </pre>
     *
     * <code>optional .google.protobuf.StringValue status = 5;</code>
     */
    public Builder mergeStatus(com.google.protobuf.StringValue value) {
      copyOnWrite();
      instance.mergeStatus(value);
      return this;
    }
    /**
     * <pre>
     * A user-set status message for this stream, if applicable.
     * </pre>
     *
     * <code>optional .google.protobuf.StringValue status = 5;</code>
     */
    public Builder clearStatus() {  copyOnWrite();
      instance.clearStatus();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:nakama.realtime.UserPresence)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.heroiclabs.nakama.rtapi.UserPresence();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        com.heroiclabs.nakama.rtapi.UserPresence other = (com.heroiclabs.nakama.rtapi.UserPresence) arg1;
        userId_ = visitor.visitString(!userId_.isEmpty(), userId_,
            !other.userId_.isEmpty(), other.userId_);
        sessionId_ = visitor.visitString(!sessionId_.isEmpty(), sessionId_,
            !other.sessionId_.isEmpty(), other.sessionId_);
        username_ = visitor.visitString(!username_.isEmpty(), username_,
            !other.username_.isEmpty(), other.username_);
        persistence_ = visitor.visitBoolean(persistence_ != false, persistence_,
            other.persistence_ != false, other.persistence_);
        status_ = visitor.visitMessage(status_, other.status_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                String s = input.readStringRequireUtf8();

                userId_ = s;
                break;
              }
              case 18: {
                String s = input.readStringRequireUtf8();

                sessionId_ = s;
                break;
              }
              case 26: {
                String s = input.readStringRequireUtf8();

                username_ = s;
                break;
              }
              case 32: {

                persistence_ = input.readBool();
                break;
              }
              case 42: {
                com.google.protobuf.StringValue.Builder subBuilder = null;
                if (status_ != null) {
                  subBuilder = status_.toBuilder();
                }
                status_ = input.readMessage(com.google.protobuf.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(status_);
                  status_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (com.heroiclabs.nakama.rtapi.UserPresence.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:nakama.realtime.UserPresence)
  private static final com.heroiclabs.nakama.rtapi.UserPresence DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new UserPresence();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static com.heroiclabs.nakama.rtapi.UserPresence getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<UserPresence> PARSER;

  public static com.google.protobuf.Parser<UserPresence> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

